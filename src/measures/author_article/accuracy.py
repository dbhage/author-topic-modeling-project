'''
Created on Oct 28, 2014

@author: dbhage

Module responsible for comparing 2 author article dicts and return the # TP, FP, TN & TP
'''

def measure_sns(actual_author_articles, expected_author_articles, author_list):
    '''
    Measure the sensitivity and specificity

    @warning: function assumes actual_author_articles and expected_author_articles use the same format
    @warning: i.e. dictionary with article names as keys and Author list as values

    @param actual_author_articles: the actual author articles, generated by the system
    @type actual_author_articles: dict<str,Author[]>

    @param expected_author_articles: the expected author articles, generated by a human
    @type expected_author_articles: dict<str,Author[]>

    @param author_list: list of Author objects 
    @type author_list: Author[]

    @return: 4-tuple with TP, FP, FN, TN
    @rtype: (int,int,int,int)
    '''

    if not actual_author_articles:
        raise ValueError("actual author articles invalid")
    
    if not expected_author_articles:
        raise ValueError("expected author articles invalid")
    
    tp = 0 # true positives
    fp = 0 # false positives
    fn = 0 # false negatives
    tn = 0 # true negatives
    
    for (article, expected_authors) in expected_author_articles.items():
        if not article in actual_author_articles:
            continue
        
        actual_authors = actual_author_articles[article]
        
        for author in actual_authors:
            if author in expected_authors:
                tp += 1
            else:
                fp += 1
        
        for author in expected_authors:
            if not author in actual_authors:
                fn += 1

        for author in author_list:
            if author not in expected_authors and author not in actual_authors:
                tn += 1
        
    return (tp, fp, fn, tn)