'''
Created on Oct 28, 2014

@author: dbhage
'''

def measure_sns(actual_author_articles, expected_author_articles):
    '''
    Measure the sensitivity and specificity

    @warning: function assumes actual_author_articles and expected_author_articles use the same format
    @warning: i.e. dictionary with article names as keys and Author list as values

    @param actual_author_articles: the actual author articles, generated by the system
    @type actual_author_articles: dict<str,Author[]>

    @param expected_author_articles: the expected author articles, generated by a human
    @type expected_author_articles: dict<str,Author[]>

    @return: 4-tuple with TP, FP, FN
    @rtype: (int,int,int)
    '''

    if not actual_author_articles:
        raise ValueError("actual author articles invalid")
    
    if not expected_author_articles:
        raise ValueError("expected author articles invalid")
    
    tp = 0 # true positives
    fp = 0 # false positives
    fn = 0 # false negatives
    
    for (article, expected_authors) in expected_author_articles.items():
        if not article in actual_author_articles:
            continue
        
        actual_authors = actual_author_articles[article]
        
        print (article)
        print (','.join([str(auth) for auth in expected_authors]))
        print (','.join([str(auth) for auth in actual_authors]))
        print ("---------------------------------------")
        
        for author in actual_authors:
            if author in expected_authors:
                tp += 1
            else:
                fp += 1
        
        for author in expected_authors:
            if not author in actual_authors:
                fn += 1
        
    return (tp, fp, fn)